parameters:
  - name: name
    type: string
  - name: pipelineEnvironmentVariables
    type: string
  - name: poolName
    type: string
  - name: vmImage
    type: string

stages:
  - stage: '${{ parameters.name }}'
    jobs:
      - job: Build
        displayName: 'Build'
        variables:
          - template: ${{ parameters.pipelineEnvironmentVariables }}
          - name: disable.coverage.autogenerate
            value: true
        
        workspace:
          clean: all
        
        pool:
          name: ${{ parameters.poolName }}
          vmImage: ${{ parameters.vmImage }}
        
        steps:
          - task: UseDotNet@2
            displayName: 'install .net 9.0 SDK'
            inputs:
              version: 9.x
  
          - task: JavaToolInstaller@0
            displayName: 'install java'
            inputs:
              versionSpec                   : '17'
              jdkArchitectureOption         : 'x64'
              jdkSourceOption               : 'AzureStorage'
              azureResourceManagerEndpoint  : 'Azure (plugin-rider-pipeline)'
              azureStorageAccountName       : 'stpluginrider'
              azureContainerName            : 'jdk17'
              azureCommonVirtualFile        : 'jdk17.zip'
              jdkDestinationDirectory       : $(Agent.ToolsDirectory)/jdk
              cleanDestinationDirectory     : true
              
          - task: Bash@3
            displayName: 'update version (gradle & plugin.xml)'
            inputs:
              targetType  : filePath
              filePath     : './update-version.sh'
              arguments   : '$(Build.BuildNumber)'
            
          - task: Gradle@3
            displayName: 'gradlew :prepareSandbox'
            inputs:
              options             : '-PPluginVersion=$(Build.BuildNumber)'
              tasks               : ':prepareSandbox'
              publishJUnitResults : false
              javaHomeOption      : 'Path'
              jdkDirectory        : $(Agent.ToolsDirectory)/jdk/JAVA_HOME_17_X64_jdk17_zip
          
          - task: CopyFiles@2
            displayName: 'copy .jar file'
            inputs:
              SourceFolder  : '$(Build.SourcesDirectory)'
              Contents      : 'build/libs/mediatr-$(Build.BuildNumber).jar'
              TargetFolder  : '$(Build.ArtifactStagingDirectory)/rider/mediatr/lib'
              flattenFolders : true
          
          - task: CopyFiles@2
            displayName: 'copy plugin.xml file'
            inputs:
              SourceFolder  : '$(Build.SourcesDirectory)'
              Contents      : 'build/resources/main/META-INF/plugin.xml'
              TargetFolder  : '$(Build.ArtifactStagingDirectory)/rider/mediatr/META-INF'
              flattenFolders : true

          - task: CopyFiles@2
            displayName: 'copy pluginIcon.xml'
            inputs:
              SourceFolder  : '$(Build.SourcesDirectory)'
              Contents      : pluginIcon.svg
              TargetFolder  : '$(Build.ArtifactStagingDirectory)/rider/mediatr/META-INF'
              flattenFolders : true
              
          - task: CopyFiles@2
            displayName: 'copy dotnet file'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: |
                src/dotnet/MediatorPlugin/bin/MediatorPlugin.Rider/Debug/MediatorPlugin.dll
              TargetFolder: '$(Build.ArtifactStagingDirectory)/rider/mediatr/dotnet'
              flattenFolders: true
                  
          - task: ArchiveFiles@2
            displayName: 'archive rider plugin'
            inputs:
              rootFolderOrFile  : '$(Build.ArtifactStagingDirectory)/rider/mediatr'
              archiveFile       : '$(Build.ArtifactStagingDirectory)/mediatr.$(Build.BuildNumber).zip'
          
          - task: PublishBuildArtifacts@1
            displayName: 'publish rider plugin'
            inputs:
              PathtoPublish : '$(Build.ArtifactStagingDirectory)/mediatr.$(Build.BuildNumber).zip'
              ArtifactName  : 'mediatr.rider.$(Build.BuildNumber)'

          - task: CopyFiles@2
            displayName: 'copy resharper plugin'
            inputs:
              SourceFolder      : '$(Build.SourcesDirectory)/src/dotnet/MediatorPlugin/bin/MediatorPlugin/Debug/'
              Contents          : '*.nupkg'
              TargetFolder      : '$(Build.ArtifactStagingDirectory)/resharper'
              CleanTargetFolder : true
              flattenFolders     : true
            
          - task: PublishBuildArtifacts@1
            displayName: 'publish resharper copy'
            inputs:
              PathtoPublish : '$(Build.ArtifactStagingDirectory)/resharper'
              ArtifactName  : 'mediatr.resharper.$(Build.BuildNumber)'
            
          - task: NuGetCommand@2
            displayName : 'NuGet push'
            enabled     : false
            inputs:
              command               : push
              packagesToPush        : '$(Build.ArtifactStagingDirectory)/*.nupkg'
              nuGetFeedType         : external
              publishFeedCredentials: ${{ variables.jetbrainsNugetName }}